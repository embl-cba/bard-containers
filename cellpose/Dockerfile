ARG TAG=3.2
FROM abcdesktopio/oc.template.ubuntu.22.04:$TAG

ARG DEBIAN_FRONTEND="noninteractive"

ENV LANG en_US.UTF-8 \
    LC_ALL en_US.UTF-8 \
    LANGUAGE en_US:en  \
    NUMBA_CACHE_DIR=/tmp


RUN apt-get update -y && \
    apt-get install -y -q --no-install-recommends \
            gcc \
            wget \
            qtcreator \
            python3-dev \
            python3-pip \
            python3-wheel \
            libblas-dev \
            liblapack-dev \
            libgl1 \
            mesa-utils \
            libxcb-cursor0 \
            libgl1-mesa-glx \
            libxcb-xinerama0 \
            libatlas-base-dev \
            gfortran \
            apt-utils \
            bzip2 \
            ca-certificates \
            curl \
            konsole \
            locales \
            libarchive-dev \
            cmake \
            libxcb-cursor0 \
            libxcb-cursor-dev \
            unzip &&  apt-get clean && \
            rm -rf /var/lib/apt/lists/* && \
            sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen && \
            locale-gen


WORKDIR /tmp
RUN wget https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh \
    && bash Miniforge3-Linux-x86_64.sh -b -p /opt/conda \
    && rm -f Miniforge3-Linux-x86_64.sh 

LABEL oc.icon="cellpose.svg"
LABEL oc.icondata=""
LABEL oc.keyword="Cellpose"
LABEL oc.cat="development"
LABEL oc.template="abcdesktopio/oc.template.gtk"
LABEL oc.name="Cellpose"
LABEL oc.launch="cellpose.konsole"
LABEL oc.displayname="Cellpose v3.1.0"
#LABEL oc.path="/opt/conda/envs/cellpose/bin/cellpose"
LABEL oc.path="/usr/bin/konsole"
LABEL oc.args="--hold -e bash -c /opt/conda/envs/cellpose/bin/cellpose"
LABEL oc.type=app
#LABEL oc.rules="{\"homedir\":{\"default\":true}}"
LABEL oc.showinview=dock
LABEL oc.acl="{\"permit\":[\"all\"]}"

RUN  if [ -d /usr/share/icons ];   then cd /usr/share/icons;    /composer/safelinks.sh; fi 
RUN  if [ -d /usr/share/pixmaps ]; then cd /usr/share/pixmaps;  /composer/safelinks.sh; fi 

ENV APPNAME "Cellpose"
ENV APPBIN "/usr/bin/konsole"
ENV APP "/usr/bin/konsole"
ENV ARGS="--hold -e bash -c /opt/conda/envs/cellpose/bin/cellpose"
ENV CONDA_BIN_PATH="/opt/conda/bin"
ENV PATH $CONDA_BIN_PATH:$PATH
ENV LD_PRELOAD="/usr/lib/x86_64-linux-gnu/libstdc++.so.6"
ENV LD_LIBRARY_PATH "/usr/local/nvidia/lib:/usr/local/nvidia/lib64"
ENV NVIDIA_DRIVER_CAPABILITIES "compute,utility"

ENV QT_DEBUG_PLUGINS=1
ENV QT_PLUGIN_PATH="/opt/conda/envs/cellpose/lib/python3.10/site-packages/PyQt6/Qt6/plugins/platforms"

RUN conda install mamba -n base -c conda-forge

RUN conda create -y --name cellpose python=3.10 -c conda-forge && \
    conda run --name cellpose python -m pip install torch==2.5.0 torchvision==0.20.0 torchaudio==2.5.0 --extra-index-url https://download.pytorch.org/whl/cu118 && \
    conda run --name cellpose python -m pip install pyqt6==6.6.1 pyqt6-qt6==6.6.1 && \
    conda run --name cellpose python -m pip install cellpose[gui] numpy==1.26.3

RUN mkdir -p /run/user && chmod 777 /run/user

USER root

RUN mkdir -p /etc/localaccount && \
    for f in passwd shadow group gshadow ; do if [ -f /etc/$f ] ; then  cp /etc/$f /etc/localaccount; rm -f /etc/$f; ln -s /etc/localaccount/$f /etc/$f; fi; done

#USER balloon

CMD ["/composer/appli-docker-entrypoint.sh" ]


